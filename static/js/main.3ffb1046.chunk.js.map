{"version":3,"sources":["components/Todo/index.js","components/redux/selectors.js","components/TodoList/index.js","components/redux/actions.js","components/Filters/index.js","App.js","components/Filters/filterSlice.js","components/TodoList/todoListSlice.js","components/redux/reducer.js","components/redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","name","priority","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","color","margin","todosRemainingSelector","createSelector","state","todoList","filters","search","searchText","status","filter","todo","includes","completed","TodoList","todoInput","useRef","todoName","setTodoName","setPriority","useSelector","dispatch","useDispatch","height","span","overflowY","map","id","Group","display","compact","ref","value","e","target","defaultValue","Option","label","type","onClick","payload","uuidv4","current","focus","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initState","filtersReducer","action","todoReducer","rootReducer","combineReducers","composedEnhancers","composeWithDevTools","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ffb1046.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ name, priority }) {\r\n  const [checked, setChecked] = useState(false)\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked)\r\n  }\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  )\r\n}\r\n","// export const todoListSelector = (state) => {\n//   // check condition\n//   const todosRemaining = state.todoList.filter((todo) => {\n//     return todo.name.includes(state.filters.search)\n//   })\n//   return todosRemaining\n// }\n\nimport { createSelector } from '@reduxjs/toolkit'\n\nexport const todoListSelector = (state) => state.todoList\nexport const filtersSelector = (state) => state.filters.search\nexport const filtersStatusSelector = (state) => state.filters.status\n\n// reselect\n\nexport const todosRemainingSelector = createSelector(\n  todoListSelector,\n  filtersSelector,\n  (todoList, searchText, status) => {\n    return todoList.filter((todo) => {\n      return todo.name.includes(searchText) && todo.completed.includes(status)\n    })\n  }\n)\n","import { Col, Row, Input, Button, Select, Tag } from 'antd';\r\nimport Todo from '../Todo';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addTodo } from '../redux/actions'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useRef, useState } from 'react'\r\nimport { todosRemainingSelector } from '../redux/selectors'\r\n\r\nexport default function TodoList() {\r\n  const todoInput = useRef()\r\n  const [todoName, setTodoName] = useState('')\r\n  const [priority, setPriority] = useState('Medium')\r\n\r\n  const todoList = useSelector(todosRemainingSelector)\r\n\r\n  // console.log({ searchText })\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleButtononClick = () => {\r\n    dispatch(\r\n      addTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        completed: false,\r\n        priority: priority,\r\n      })\r\n    )\r\n    setTodoName('')\r\n    setPriority('Medium')\r\n    todoInput.current.focus()\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value)\r\n  }\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value)\r\n  }\r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)' }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList.map((todo, id) => (\r\n          <Todo\r\n            key={id}\r\n            name={todo.name}\r\n            priority={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n          <Input\r\n            ref={todoInput}\r\n            value={todoName}\r\n            onChange={handleInputChange}\r\n          />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={priority}\r\n            onChange={handlePriorityChange}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleButtononClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","export const addTodo = (data) => {\n  return {\n    type: 'todoList/addTodo',\n    payload: data,\n  }\n}\nexport const filterTodo = (text) => {\n  // console.log({ text })\n\n  return {\n    type: 'filters/filterTodo',\n    payload: text,\n  }\n}\n\nexport const statusFilter = (status) => {\n  return {\n    type: 'filters/statusFilter',\n    payload: status,\n  }\n}\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { filterTodo, statusFilter } from '../redux/actions'\r\n\r\nconst { Search } = Input\r\n\r\nexport default function Filters() {\r\n  const [searchText, setSearchText] = useState('')\r\n  const [filterStatus, setFilterStatus] = useState('All')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSearchText = (e) => {\r\n    // console.log(e.target.value)\r\n    setSearchText(e.target.value)\r\n    dispatch(filterTodo(e.target.value))\r\n  }\r\n\r\n  const handleStatusChange = (e) => {\r\n    // console.log(e.target.value)\r\n    setFilterStatus(e.target.value)\r\n    dispatch(statusFilter(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          value={searchText}\r\n          onChange={handleSearchText}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: '100%' }}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>REDUX CORE && REDUX TOOLKIT</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App;\n","const initState = {\n  search: '',\n  status: 'All',\n  priority: [],\n}\n\nfunction filtersReducer(state = initState, action) {\n  switch (action.type) {\n    case 'filters/filterTodo':\n      return {\n        ...state,\n        search: action.payload,\n      }\n    case 'filters/statusFilter':\n      return {\n        ...state,\n        status: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default filtersReducer\n","const initState = [\n  { id: 1, name: ' Learn Yoga', completed: false, priority: 'Medium' },\n  { id: 2, name: ' Learn Redux', completed: true, priority: 'High' },\n  { id: 3, name: ' Learn JavaScript', completed: false, priority: 'Low' },\n]\n\nfunction todoReducer(state = initState, action) {\n  switch (action.type) {\n    case 'todoList/addTodo':\n      return [...state, action.payload]\n\n    default:\n      return state\n  }\n}\n\nexport default todoReducer\n","import { combineReducers } from 'redux'\n\nimport filtersReducer from '../Filters/filterSlice'\nimport todoReducer from '../TodoList/todoListSlice'\n\n// function rootReducer(state = {}, action) {\n//   return {\n//     filters: filtersReducer(state.filters, action),\n//     todoList: todoReducer(state.todoList, action),\n//   }\n// }\n\n// sử dụng combineReducers cũng sẽ cho ra kết quả tương tự như trên\n\nconst rootReducer = combineReducers({\n  filters: filtersReducer,\n  todoList: todoReducer,\n})\n\nexport default rootReducer\n","import { legacy_createStore as createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducer'\n\nconst composedEnhancers = composeWithDevTools()\nconst store = createStore(rootReducer, composedEnhancers)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './components/redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}